{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nexport const analyzeAddress = async address => {\n  try {\n    const response = await axios.get(`${API_URL}/analyze-address`, {\n      params: {\n        address\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      throw new Error(error.response.data.error || 'Failed to analyze address');\n    }\n    throw new Error('An error occurred while analyzing the address');\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","analyzeAddress","address","response","get","params","data","error","isAxiosError","Error"],"sources":["/Users/ericg/Documents/Real Estate Mapping/frontend/src/api/addressService.ts"],"sourcesContent":["import axios from 'axios';\nimport { AddressAnalysisResponse } from '../types/address-analysis';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nexport const analyzeAddress = async (address: string): Promise<AddressAnalysisResponse> => {\n  try {\n    const response = await axios.get<AddressAnalysisResponse>(`${API_URL}/analyze-address`, {\n      params: { address }\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      throw new Error(error.response.data.error || 'Failed to analyze address');\n    }\n    throw new Error('An error occurred while analyzing the address');\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAe,IAAuC;EACzF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAA0B,GAAGP,OAAO,kBAAkB,EAAE;MACtFQ,MAAM,EAAE;QAAEH;MAAQ;IACpB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIX,KAAK,CAACY,YAAY,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAC/C,MAAM,IAAIM,KAAK,CAACF,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACC,KAAK,IAAI,2BAA2B,CAAC;IAC3E;IACA,MAAM,IAAIE,KAAK,CAAC,+CAA+C,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}